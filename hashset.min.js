function hashSet(){this._values={};this.values=function(){var a=[],b=0;for(i in this._values)a[b++]=i;return a};this.contains=function(a){return this._values.hasOwnProperty(a)};this.add=function(a){this._values[a]=!0};this.remove=function(a){delete this._values[a]};this.clear=function(){this._values={}};this.count=function(){var a=0,b;for(b in object)a++;return a};this.copyToArray=function(a){a instanceof Array||(a=[]);for(i in this._values)a.push(i);return a};this.exceptWith=function(a){if(!(array instanceof
hashset))throw"ExceptWith expects parameter 1 to be a hashset";for(i in a._values)this.remove(i);return this};this.isSubsetOf=function(a){if(!(array instanceof hashset))throw"IsSubsetOf expects parameter 1 to be a hashset";for(i in this._values)if(!a.contains(i))return!1;return!0};this.unionWith=function(a){if(!(array instanceof hashset))throw"UnionWith expects parameter 1 to be a hashset";for(i in a._values)this.add(i);return this};this.enumerate=function(a){if("function"!==typeof a)throw"enumerate expects parameter 1 to be a function";
for(i in this._values)a(i)}};